on: 
  release:
    types: [published]
  push:

name: Test, Build and Release apk
jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    env:
      ANDROID_JNI_PATH: ./android/app/src/main/jniLibs
    steps:
    
    - name: Set tag path
      env: 
        NIGHTLY: ${{github.event.action != 'published'}}
      run: |
        env
        STEGOS_BRANCH=${GITHUB_REF##*/}
        STEGOS_TAG=$STEGOS_BRANCH
        if [ "${NIGHTLY}" == "true" ]; then
          STEGOS_TAG="nightly"
        fi
        echo "::set-env name=STEGOS_TAG::${STEGOS_TAG}"
    - name: Set organisation variable
      run: echo "::set-env name=STEGOS_ORGANISATION::${GITHUB_REPOSITORY%%/*}"
    - run: env
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        flutter-version: '1.17.1'
    - run: flutter pub get
    - run: mkdir -p ${{env.ANDROID_JNI_PATH}}/arm64-v8a/
    - run: mkdir -p ${{env.ANDROID_JNI_PATH}}/x86_64/

    - name: Copy stegos lib arm_x64
      run: wget -O aarch.tar.gz https://github.com/${{env.STEGOS_ORGANISATION}}/stegos/releases/download/${STEGOS_TAG}/android-aarch64-libstegos-dev.tar.gz
    - run: tar -zxf aarch.tar.gz --directory ${{env.ANDROID_JNI_PATH}}/arm64-v8a/
    
    - name: Copy stegos lib x86_x64
      run: wget -O x64.tar.gz https://github.com/${STEGOS_ORGANISATION}/stegos/releases/download/${STEGOS_TAG}/android-x64-libstegos-dev.tar.gz
    - run: tar -zxf x64.tar.gz --directory ${{env.ANDROID_JNI_PATH}}/x86_64
    
    - run: flutter build apk --split-per-abi

    - uses: actions/upload-artifact@v2
      if: github.event.action != 'published'
      with:
        name: Branch builds
        path: "build/app/outputs/apk/release/*.apk"

    - name: Create a Release APK
      if: github.event.action == 'published'
      uses: ncipollo/release-action@v1
      with:
        tag: testing
        artifacts: "build/app/outputs/apk/release/*.apk"
        token: ${{ secrets.TOKEN }}